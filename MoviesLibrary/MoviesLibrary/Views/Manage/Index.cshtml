@model MoviesLibrary.Models.IndexViewModel
@{
    ViewBag.Title = "Profile";
}

    <h2>@Model.User.FirstName.ToUpper() @Model.User.LastName.ToUpper() @ViewBag.Title</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h4>Change your account settings</h4>

    <hr />

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
{
    <div class="form-group">
        @Html.LabelFor(m => m.User.UserName, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.User.UserName, new {@class = "form-control",@readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.User.FirstName, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.User.FirstName, new {@class = "form-control",@readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.User.LastName, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.User.LastName, new {@class = "form-control",@readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.User.Email, new {@class = "col-md-2 control-label"})
        <div class="col-md-10" readonly>
            @Html.TextBoxFor(m => m.User.Email, new {@class = "form-control",@readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Save" disabled="disabled"/>
        </div>
    </div>
}

        <dl class="dl-horizontal">
            <dt>Password:</dt>
            <dd>
                [
                @if (Model.HasPassword)
                {
                    @Html.ActionLink("Change your password", "ChangePassword")
                }
                else
                {
                    @Html.ActionLink("Create", "SetPassword")
                }
                ]
            </dd>
            @* <dt>External Logins:</dt> *@
            @* <dd> *@
            @*     @Model.Logins.Count [ *@
            @*     @Html.ActionLink("Manage", "ManageLogins") ] *@
            @* </dd> *@
            @*
                Phone Numbers can used as a second factor of verification in a two-factor authentication system.

                 See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                    for details on setting up this ASP.NET application to support two-factor authentication using SMS.

                 Uncomment the following block after you have set up two-factor authentication
            *@
            @*
                <dt>Phone Number:</dt>
                <dd>
                    @(Model.PhoneNumber ?? "None")
                    @if (Model.PhoneNumber != null)
                    {
                        <br />
                        <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                        using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                        }
                    }
                    else
                    {
                        <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                    }
                </dd>
            *@
            @* <dt>Two-Factor Authentication:</dt> *@
            @* <dd> *@
            @*     <p> *@
            @*         There are no two-factor authentication providers configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a> *@
            @*         for details on setting up this ASP.NET application to support two-factor authentication. *@
            @*     </p> *@
            @*@if (Model.TwoFactor)
                {
                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Enabled
                        <input type="submit" value="Disable" class="btn btn-link" />
                        </text>
                    }
                }
                else
                {
                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Disabled
                        <input type="submit" value="Enable" class="btn btn-link" />
                        </text>
                    }
                }*@
            @* </dd> *@
        </dl>
    </div>
